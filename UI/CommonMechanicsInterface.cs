using System;

namespace game {
    public class CommonMechanicsInterface : UIStep {
        public CommonMechanicsInterface(UIStep _prevStep) {
            prevStep = _prevStep;
        }

        public override int Actions() {
            ConsoleUI.NewScreen();
            Console.WriteLine("Common mechanics\n");

            Console.WriteLine("Путешествуя по миру (мы все еще не делаем этот модуль путешествий), армии вступают в сражения с другими армиями (мы делаем как раз вот этот модуль - модуль сражений). В сражении существа (точнее стеки, отдельно каждое существо не рассматривается) ходят по очереди, в соответствии с параметром существа - \"Инициатива\": чем выше инициатива, тем раньше ходит стек существ. Ход заключается в нанесении урона вражескому стеку существ или в применении какой-либо активной способности (если существо обладает активными способностями). Чем больше количество существ в стеке - тем сильнее эффект хода - больше урон, мощнее проявляет себя активная способность. Все параметры существ могут быть изменены в ходе сражения.\n\n" + 
            "Сражение длится до тех пор, пока одна из армий не останется пустой (будут убиты все стеки существ) или пока кто-то не сдастся. Сдаться можно только в ход своего стека существ (то есть нельзя сдаться, пока ходит соперник).\n\n" + 
            "Как только закончено сражение - объявляются результаты (кто победил, какие понес потери, кто проиграл, какие понес потери, причина окончания: проигравший пал в сражении или сбежал).\n\n" + 
            "После окончания сражения должны быть обновлены состояния исходных армий в соответствии с понесенными потерями (те, которые путешествуют по миру).\n");

            ConsoleUI.PrintNumericList(1, "Back");
            ConsoleUI.GetNumericOption(1, 1);
            
            return 0;
        }

        public override UIStep NextStep(int option) {
            return prevStep;
        }

        private UIStep prevStep;
    }
}